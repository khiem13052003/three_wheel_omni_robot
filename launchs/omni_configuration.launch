<?xml version="1.0" ?>
<launch>
  <rosparam file="$(find three_wheel_omni_robot)/config/params.yaml" command="load" />    
  <!-- 2. robot_state_publisher: publish TF d\u1ef1a trên URDF -->
  <param name="robot_description" command="$(find xacro)/xacro $(find three_wheel_omni_robot)/urdf/omni.urdf.xacro" />  
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen"/>

  <node pkg="three_wheel_omni_robot" type="imu_node.py" name="imu_node" output="screen" />
  <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter">
    <param name="use_mag" value="true"/>
    <param name="gain" value="0.1"/>
    <param name="zeta" value="0.0"/>
    <param name="fixed_frame " value="odom"/>
    <param name="publish_tf  " value="false"/>
    <param name="use_magnetic_field_msg"            type="bool" value="true"/>
  </node> 

  <node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher" output="screen">
  <!-- Frame -->
  <param name="fixed_frame" value="odom"/>
  <param name="base_frame" value="base_link"/>
  <!-- Motion prediction -->
  <param name="use_odom" value="true"/>
  <param name="use_imu" value="true"/>
  <param name="use_vel" value="false"/>
  <!-- Input scan -->
  <param name="use_cloud_input" value="false"/>
  <!-- Keyframes -->
  <param name="kf_dist_linear" value="0.05"/>   <!-- c?p nh?t thu?ng hon khi drift -->
  <param name="kf_dist_angular" value="0.087"/> <!-- ~5° -->
  <!-- Output -->
  <param name="publish_tf" value="true"/>
  <param name="publish_pose" value="false"/>
  <param name="publish_pose_stamped" value="true"/>
  <!-- Scan matching co b?n -->
  <param name="max_iterations" value="10"/>
  <param name="max_correspondence_dist" value="0.3"/>
  <param name="max_linear_correction" value="0.3"/>
  <param name="max_angular_correction_deg" value="30.0"/>
  <param name="epsilon_xy" value="1e-4"/>
  <param name="epsilon_theta" value="1e-4"/>
  <param name="outliers_maxPerc" value="0.90"/>
  <!-- Nâng cao gi? m?c d?nh -->
  <param name="sigma" value="0.01"/>
  <param name="use_corr_tricks" value="1"/>
  <param name="restart" value="0"/>
  <param name="restart_threshold_mean_error" value="0.01"/>
  <param name="restart_dt" value="1.0"/>
  <param name="restart_dtheta" value="0.1"/>
  <param name="clustering_threshold" value="0.25"/>
  <param name="orientation_neighbourhood" value="10"/>
  <param name="use_point_to_line_distance" value="1"/>
  <param name="do_alpha_test" value="0"/>
  <param name="do_alpha_test_thresholdDeg" value="20.0"/>
  <param name="outliers_adaptive_order" value="0.7"/>
  <param name="outliers_adaptive_mul" value="2.0"/>
  <param name="do_visibility_test" value="0"/>
  <param name="outliers_remove_doubles" value="1"/>
  <param name="do_compute_covariance" value="0"/>
  </node>

	<node pkg="three_wheel_omni_robot" type="odom_publisher.py" name="odom_publisher" output="screen" /> 

	<remap from="/odometry/filtered" to="/odom" />
	<node pkg="robot_localization" type="ekf_localization_node" name="ekf_filter" output="screen">
		<rosparam file="$(find three_wheel_omni_robot)/config/ekf_params.yaml" command="load"/>
	</node>

  <node pkg="three_wheel_omni_robot" type="kinematics_node.py" name="kinematic_node" output="screen" />
  <node pkg="three_wheel_omni_robot" type="control_node.py" name="control_node" output="screen" />
  
  <node pkg="rplidar_ros"  type="rplidarNode" name="rplidarNode"  output="screen" >
    <param name="serial_port"         type="string" value="/dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0"/>
    <param name="serial_baudrate"     type="int"    value="115200"/><!--A1/A2 -->
    <!--param name="serial_baudrate"     type="int"    value="256000"--><!--A3 -->
    <param name="frame_id"            type="string" value="laser"/>
    <param name="inverted"            type="bool"   value="false"/>
    <param name="angle_compensate"    type="bool"   value="true"/>
  </node>

</launch>

